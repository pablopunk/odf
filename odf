#!/bin/bash

# Get the relative path of the Git repository (fallback to absolute path if needed)
repo_path=$(git rev-parse --show-toplevel)
repo_path=$(realpath --relative-to="$PWD" "$repo_path" 2>/dev/null || echo "$repo_path")

# Check for the --pr flag
use_pr=false
if [[ "$1" == "--pr" ]]; then
  use_pr=true
  shift # Remove the --pr flag from the arguments
fi

# Use provided editor or 'echo' as default
editor="${@:-echo}"

files=()

cmd_output=""
if $use_pr; then
  if git show-ref --verify --quiet refs/remotes/origin/main; then
    base_branch="origin/main"
  else
    base_branch="origin/master"
  fi
  cmd_output="$(git diff --name-only $(git merge-base $base_branch HEAD))"
else
  cmd_output="$(git diff -w --name-only; git ls-files --others --exclude-standard)"
fi

# Collect modified and untracked file paths
while IFS= read -r file; do
  files+=("$file")
done < <(echo "$cmd_output")

# Prepend repository path and trim whitespace
for i in "${!files[@]}"; do
  files[$i]=$(echo "$repo_path/${files[$i]}" | xargs)
done

# Open files with editor (if any)
if (( ${#files[@]} )); then
  "$editor" "${files[@]}"
fi

